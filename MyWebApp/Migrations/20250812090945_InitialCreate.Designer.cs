// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebApp.Data;

#nullable disable

namespace MyWebApp.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250812090945_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("MyWebApp.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaxReps")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MaxWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Exercise", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxReps = 50,
                            Name = "Push-ups"
                        },
                        new
                        {
                            Id = 2,
                            MaxWeight = 100.0,
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 3,
                            MaxWeight = 150.0,
                            Name = "Squats"
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.ExerciseProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("exercise_id");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Set")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL");

                    b.Property<int>("WorkoutProgId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("workout_prog_id");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutProgId");

                    b.ToTable("Exercise_progress", (string)null);
                });

            modelBuilder.Entity("MyWebApp.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workout", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Upper Body"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Lower Body"
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("workout_id");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("exercise_id");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Workout_exercises", (string)null);
                });

            modelBuilder.Entity("MyWebApp.Models.WorkoutProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("workout_id");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Workout_progress", (string)null);
                });

            modelBuilder.Entity("MyWebApp.Models.ExerciseProgress", b =>
                {
                    b.HasOne("MyWebApp.Models.Exercise", "Exercise")
                        .WithMany("ExerciseProgresses")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebApp.Models.WorkoutProgress", "WorkoutProgress")
                        .WithMany("ExerciseProgresses")
                        .HasForeignKey("WorkoutProgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutProgress");
                });

            modelBuilder.Entity("MyWebApp.Models.WorkoutExercise", b =>
                {
                    b.HasOne("MyWebApp.Models.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebApp.Models.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("MyWebApp.Models.WorkoutProgress", b =>
                {
                    b.HasOne("MyWebApp.Models.Workout", "Workout")
                        .WithMany("WorkoutProgresses")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("MyWebApp.Models.Exercise", b =>
                {
                    b.Navigation("ExerciseProgresses");

                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("MyWebApp.Models.Workout", b =>
                {
                    b.Navigation("WorkoutExercises");

                    b.Navigation("WorkoutProgresses");
                });

            modelBuilder.Entity("MyWebApp.Models.WorkoutProgress", b =>
                {
                    b.Navigation("ExerciseProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
